AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template creates an ASG behind an ALB.
Parameters:
  VPC:
    Description: Select your VPC
    Type: AWS::EC2::VPC::Id

  Subnet:
    Description: Select at least two subnets
    Type: List<AWS::EC2::Subnet::Id>
  myKeyPair:
    Description: Select your KeyPair
    Type: AWS::EC2::KeyPair::KeyName
  myPm:
    Description: Select instance type
    Type: String
    Default: t2.micro
    AllowedValues:
     - t3.micro
     - t2.micro
     - t2.nano
     - t3.nano
    
Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0cff7528ff583bf9a
    us-east-2:
      AMI: ami-02d1e544b84bf7502
    us-west-1:
      AMI: ami-0d9858aa3c6322f73
    us-west-2:
      AMI: ami-098e42ae54c764c35
    eu-west-1:
      AMI: ami-0d71ea30463e0ff8d

Resources:

  myALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt mySG.GroupId  
      Subnets: !Ref Subnet 
      Type: application

  myListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - Type: forward
          TargetGroupArn: !Ref myTG
      LoadBalancerArn: !Ref  myALB # Required
      Port: 80
      Protocol: HTTP  

  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AvailabilityZones: !GetAZs 
      DesiredCapacity: "2"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate: 
        LaunchTemplateId: !Ref myLT 
        Version: "1"
      MaxSize: "3" 
      MinSize: "1"
      TargetGroupARNs: 
        - !Ref myTG  
        
  myCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref myASG  # Required
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60.0     
  myLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap 
          - RegionImageMap
          - !Ref AWS::Region
          - AMI
        InstanceType: !Ref myPm
        KeyName: !Ref myKeyPair
        SecurityGroupIds:
          - !GetAtt mySG.GroupId
        UserData: !Base64 |
          #! /bin/bash
          yum update -y
          yum install -y httpd
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
          DATE_TIME=`date`
          chmod -R 777 /var/www/html
          echo "<html>
          <head>
              <title> Congratulations! You have created an instance from Launch Template</title>
          </head>
          <body>
              <h1>This web server is launched from launch template by YOUR_NAME</h1>
              <p>This instance is created at <b>$DATE_TIME</b></p>
              <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
              <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
          </body>
          </html>" > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd
  mySG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Enables SSH and HTTP 
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref  VPC

  myTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC  
   
Outputs:
  ALBDNSName:
    Description: The DNSName of the Application Load Balancer
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt myALB.DNSName
    
  